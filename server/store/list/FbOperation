[
	{
		"content": "query GetRoleBindApis($code: String!) @rbac(requireMatchAny: [admin]) {\n  data: system_getRoleBindApis(GETApiV1RoleApisInput: {code: $code}) {\n    content\n    createTime\n    deleteTime\n    enabled\n    id\n    illegal\n    isPublic\n    liveQuery\n    method\n    operationType\n    remark\n    restUrl\n    roleType\n    roles\n    title\n    updateTime\n  }\n}",
		"createTime": "2023-03-28 10:10:29Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1516639650775040,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/GetRoleBindApis",
		"updateTime": "2023-03-30 06:38:35Z"
	},
	{
		"content": "mutation BindRoleApis($allRoles: [String]!, $apis: [Int]!, $roleCode: String!) @rbac(requireMatchAny: [admin]) {\n  data: system_bindRoleApis(\n    POSTApiV1RoleBindApiInput: {roleCode: $roleCode, apis: $apis, allRoles: $allRoles}\n  ) {\n    count\n  }\n}",
		"createTime": "2023-03-28 10:10:29Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1516639652216832,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/System/BindRoleApis",
		"updateTime": "2023-03-30 06:38:28Z"
	},
	{
		"content": "mutation CreateOnePost($title: String!, $poster: String, $content: String, $publishedAt: DateTime, $userId: String! @fromClaim(name: USERID)) {\n  data: main_createOnePost(\n    data: {title: $title, poster: $poster, publishedAt: $publishedAt, User: {connect: {id: $userId}}, content: $content}\n  ) {\n    id\n    title\n    poster\n    publishedAt\n    authorId\n    User {\n      name\n      id\n      avatarUrl\n    }\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776042184704,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/CreateOne",
		"updateTime": "2023-04-02 13:39:21Z"
	},
	{
		"content": "mutation DeleteOnePost($id: Int!) {\n  data: main_deleteOnePost(where: {id: $id}) {\n    id\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776043888640,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/DeleteOne",
		"updateTime": "2023-03-30 07:38:31Z"
	},
	{
		"content": "mutation UpdateOnePost($id: Int!, $title: String, $poster: String, $publishedAt: DateTime, $content: String) {\n  data: main_updateOnePost(\n    data: {title: {set: $title}, poster: {set: $poster}, publishedAt: {set: $publishedAt}, content: {set: $content}}\n    where: {id: $id}\n  ) {\n    id\n    title\n    poster\n    publishedAt\n    authorId\n    User {\n      name\n      id\n      avatarUrl\n    }\n    content\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776045789184,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/UpdateOne",
		"updateTime": "2023-04-02 13:38:56Z"
	},
	{
		"content": "query GetOnePost($id: Int!) {\n  data: main_findFirstPost(where: {id: {equals: $id}}) {\n    id\n    title\n    poster\n    publishedAt\n    authorId\n    User {\n      name\n      id\n      avatarUrl\n    }\n    content\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776047689728,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/GetOne",
		"updateTime": "2023-04-02 13:38:21Z"
	},
	{
		"content": "query GetPostList($take: Int = 10, $skip: Int = 0, $orderBy: [main_PostOrderByWithRelationInput], $query: main_PostWhereInput) {\n  data: main_findManyPost(\n    skip: $skip\n    take: $take\n    orderBy: $orderBy\n    where: {AND: $query}\n  ) {\n    id\n    title\n    poster\n    publishedAt\n    authorId\n    User {\n      name\n      avatarUrl\n    }\n    content\n  }\n  total: main_aggregatePost(where: {AND: $query}) @transform(get: \"_count.id\") {\n    _count {\n      id\n    }\n  }\n}",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776049197056,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/GetList",
		"updateTime": "2023-04-02 13:38:32Z"
	},
	{
		"content": "mutation DeleteManyPost($ids: [Int]!) {\n  data: main_deleteManyPost(where: {id: {in: $ids}}) {\n    count\n  }\n} ",
		"createTime": "2023-03-29 03:42:25Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1520776050704384,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Post/DeleteMany",
		"updateTime": "2023-04-02 14:43:48Z"
	},
	{
		"content": "mutation MyQuery($avatarUrl: String, $id: String!, $name: String!, $role: String) @internalOperation {\n  data: main_createOneUser(\n    data: {id: $id, name: $name, avatarUrl: $avatarUrl, Role: {connect: {code: $role}}}\n  ) {\n    id\n  }\n}",
		"createTime": "2023-03-29 09:36:47Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1522169491947520,
		"illegal": false,
		"isPublic": false,
		"liveQuery": false,
		"method": "POST",
		"operationType": "mutations",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/User/CreateOne",
		"updateTime": "2023-03-30 06:39:19Z"
	},
	{
		"content": "query MyQuery($id: String!) @internalOperation {\n  data: main_findFirstUser(where: {id: {equals: $id}}) {\n    id\n  }\n}",
		"createTime": "2023-03-29 09:36:58Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1522170168147968,
		"illegal": false,
		"isPublic": false,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/User/GetOne",
		"updateTime": "2023-03-29 09:39:18Z"
	},
	{
		"content": "query MyQuery($equals: String! @fromClaim(name: USERID)) {\n  data: main_findFirstUser(where: {id: {equals: $equals}}) {\n    name\n    id\n    avatarUrl\n    roles: Role {\n      code\n    }\n  }\n}",
		"createTime": "2023-03-29 09:45:28Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1522203582332928,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/User/Me",
		"updateTime": "2023-03-30 06:59:00Z"
	},
	{
		"content": "query MyQuery {\n  data: main_aggregateUser {\n    count: _count {\n      id\n    }\n  }\n}",
		"createTime": "2023-03-30 06:40:18Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1527137852391424,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "requireMatchAny",
		"roles": "[\"admin\"]",
		"title": "/User/CountUsers",
		"updateTime": "2023-03-30 06:51:32Z"
	},
	{
		"id": 1546182777700352,
		"method": "GET",
		"restUrl": "",
		"operationType": "queries",
		"isPublic": true,
		"remark": "",
		"illegal": false,
		"liveQuery": false,
		"title": "/Statistics/MonthlySales",
		"content": "query MyQuery {\n  data: statistics_GetMonthlySales {\n    months\n    totalSales\n  }\n} ",
		"enabled": true,
		"createTime": "2023-04-02 15:23:41Z",
		"updateTime": "2023-04-03 06:36:14Z",
		"deleteTime": "",
		"roleType": "",
		"roles": ""
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetSalesTop10 {\n    shopName\n    totalSales\n  }\n}",
		"createTime": "2023-04-02 15:24:39Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546186559717376,
		"illegal": true,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/SalesTop10",
		"updateTime": "2023-04-02 15:26:01Z"
	},
	{
		"content": "query MyQuery {\n  data:statistics_GetVisitTrending {\n    count\n    days\n  }\n}",
		"createTime": "2023-04-02 15:24:59Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546187863556096,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/VisitTrending",
		"updateTime": "2023-04-02 15:25:53Z"
	},
	{
		"content": "query MyQuery {\n  data: statistics_GetSaleTypePercent {\n    typeId\n    typeName\n    totalSales\n  }\n}",
		"createTime": "2023-04-02 15:26:10Z",
		"deleteTime": "",
		"enabled": true,
		"id": 1546192569499648,
		"illegal": false,
		"isPublic": true,
		"liveQuery": false,
		"method": "GET",
		"operationType": "queries",
		"remark": "",
		"restUrl": "",
		"roleType": "",
		"roles": "",
		"title": "/Statistics/SaleTypePercent",
		"updateTime": "2023-04-02 15:44:53Z"
	}
]